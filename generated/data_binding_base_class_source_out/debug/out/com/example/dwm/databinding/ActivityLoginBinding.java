// Generated by view binder compiler. Do not edit!
package com.example.dwm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dwm.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView email;

  @NonNull
  public final TextInputEditText emaillogin;

  @NonNull
  public final TextView login;

  @NonNull
  public final Button loginbtn;

  @NonNull
  public final TextView password;

  @NonNull
  public final TextInputEditText passwordlogin;

  @NonNull
  public final TextView signuptxt;

  @NonNull
  public final TextView textView4;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView, @NonNull TextView email,
      @NonNull TextInputEditText emaillogin, @NonNull TextView login, @NonNull Button loginbtn,
      @NonNull TextView password, @NonNull TextInputEditText passwordlogin,
      @NonNull TextView signuptxt, @NonNull TextView textView4) {
    this.rootView = rootView;
    this.email = email;
    this.emaillogin = emaillogin;
    this.login = login;
    this.loginbtn = loginbtn;
    this.password = password;
    this.passwordlogin = passwordlogin;
    this.signuptxt = signuptxt;
    this.textView4 = textView4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.email;
      TextView email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.emaillogin;
      TextInputEditText emaillogin = ViewBindings.findChildViewById(rootView, id);
      if (emaillogin == null) {
        break missingId;
      }

      id = R.id.login;
      TextView login = ViewBindings.findChildViewById(rootView, id);
      if (login == null) {
        break missingId;
      }

      id = R.id.loginbtn;
      Button loginbtn = ViewBindings.findChildViewById(rootView, id);
      if (loginbtn == null) {
        break missingId;
      }

      id = R.id.password;
      TextView password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.passwordlogin;
      TextInputEditText passwordlogin = ViewBindings.findChildViewById(rootView, id);
      if (passwordlogin == null) {
        break missingId;
      }

      id = R.id.signuptxt;
      TextView signuptxt = ViewBindings.findChildViewById(rootView, id);
      if (signuptxt == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, email, emaillogin, login,
          loginbtn, password, passwordlogin, signuptxt, textView4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
