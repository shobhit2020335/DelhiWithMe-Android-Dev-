// Generated by view binder compiler. Do not edit!
package com.example.dwm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dwm.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CommentsampleBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView commentText;

  @NonNull
  public final TextView commentTime;

  @NonNull
  public final CircleImageView commentimg;

  @NonNull
  public final TextView commentname;

  @NonNull
  public final ImageView dlbadge;

  private CommentsampleBinding(@NonNull ConstraintLayout rootView, @NonNull TextView commentText,
      @NonNull TextView commentTime, @NonNull CircleImageView commentimg,
      @NonNull TextView commentname, @NonNull ImageView dlbadge) {
    this.rootView = rootView;
    this.commentText = commentText;
    this.commentTime = commentTime;
    this.commentimg = commentimg;
    this.commentname = commentname;
    this.dlbadge = dlbadge;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CommentsampleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CommentsampleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.commentsample, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CommentsampleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.commentText;
      TextView commentText = ViewBindings.findChildViewById(rootView, id);
      if (commentText == null) {
        break missingId;
      }

      id = R.id.commentTime;
      TextView commentTime = ViewBindings.findChildViewById(rootView, id);
      if (commentTime == null) {
        break missingId;
      }

      id = R.id.commentimg;
      CircleImageView commentimg = ViewBindings.findChildViewById(rootView, id);
      if (commentimg == null) {
        break missingId;
      }

      id = R.id.commentname;
      TextView commentname = ViewBindings.findChildViewById(rootView, id);
      if (commentname == null) {
        break missingId;
      }

      id = R.id.dlbadge;
      ImageView dlbadge = ViewBindings.findChildViewById(rootView, id);
      if (dlbadge == null) {
        break missingId;
      }

      return new CommentsampleBinding((ConstraintLayout) rootView, commentText, commentTime,
          commentimg, commentname, dlbadge);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
